{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Github_Projects\\\\Online-Shope-BaliProduct\\\\src\\\\components\\\\AutoComplete\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { getProduct, fetchProducts, searchProducts } from \"../../redux_store/reducers/cart/actions\";\nimport { filterProductsByTitle } from '../../utils/filter';\nexport const AutoComplete = ({\n  products,\n  getProduct,\n  searchProducts,\n  fetchProducts\n}) => {\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  const onChange = e => {\n    const value = e.target.value;\n    setSearch(value); // searchProducts(products, search)\n\n    filterProductsByTitle(products, search);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"auto-complete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: onChange,\n    type: \"text\",\n    placeholder: \"Search...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fas fa-search\",\n    onClick: getProduct,\n    style: {\n      position: \"absolute\",\n      top: \"25%\",\n      right: \"5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  products: state.cart.products\n});\n\nconst mapDispatchToProps = {\n  getProduct,\n  fetchProducts,\n  searchProducts\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoComplete);","map":{"version":3,"sources":["C:/Users/User/Github_Projects/Online-Shope-BaliProduct/src/components/AutoComplete/index.js"],"names":["React","useState","useEffect","axios","connect","getProduct","fetchProducts","searchProducts","filterProductsByTitle","AutoComplete","products","search","setSearch","onChange","e","value","target","position","top","right","mapStateToProps","state","cart","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,cAApC,QAA0D,yCAA1D;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYL,EAAAA,UAAZ;AAAwBE,EAAAA,cAAxB;AAAwCD,EAAAA;AAAxC,CAAD,KAA6D;AACvF,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,aAAa;AAEd,GAHQ,EAGN,EAHM,CAAT;;AAUA,QAAMO,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACAH,IAAAA,SAAS,CAACG,KAAD,CAAT,CAFsB,CAGtB;;AACAP,IAAAA,qBAAqB,CAACE,QAAD,EAAWC,MAAX,CAArB;AACD,GALD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAEE,QAAjB;AAA2B,IAAA,IAAI,EAAC,MAAhC;AACE,IAAA,WAAW,EAAC,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAG,IAAA,SAAS,EAAC,eAAb;AACE,IAAA,OAAO,EAAER,UADX;AAEE,IAAA,KAAK,EAAE;AAAEY,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,EAAE,KAA7B;AAAoCC,MAAAA,KAAK,EAAE;AAA3C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAgBD,CAnCM;;AAsCP,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,QAAQ,EAAEW,KAAK,CAACC,IAAN,CAAWZ;AADa,CAAZ,CAAxB;;AAOA,MAAMa,kBAAkB,GAAG;AACzBlB,EAAAA,UADyB;AAEzBC,EAAAA,aAFyB;AAGzBC,EAAAA;AAHyB,CAA3B;AASA,eAAeH,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,YAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { getProduct, fetchProducts, searchProducts } from \"../../redux_store/reducers/cart/actions\";\r\nimport { filterProductsByTitle } from '../../utils/filter';\r\n\r\nexport const AutoComplete = ({ products, getProduct, searchProducts, fetchProducts }) => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value\r\n    setSearch(value)\r\n    // searchProducts(products, search)\r\n    filterProductsByTitle(products, search);\r\n  }\r\n  return (\r\n    <div className='auto-complete'>\r\n      <input onChange={onChange} type='text'\r\n        placeholder='Search...' />\r\n      <i className=\"fas fa-search\"\r\n        onClick={getProduct}\r\n        style={{ position: \"absolute\", top: \"25%\", right: \"5%\" }}>\r\n\r\n      </i>\r\n\r\n      {/* {search && filterProducts.length !== 0 ? (<ul className=\"dropdown\">\r\n        {filterProducts.map((product, index) => <li key={index} onClick={getProduct}>{product.title}</li>)}\r\n      </ul>)\r\n        : \"\"} */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.cart.products,\r\n})\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  getProduct,\r\n  fetchProducts,\r\n  searchProducts,\r\n\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoComplete);"]},"metadata":{},"sourceType":"module"}