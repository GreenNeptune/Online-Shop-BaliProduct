{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\Github_Projects\\\\Online-Shope-BaliProduct\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import{connect}from'react-redux';import{getProduct,fetchProducts,searchProducts}from\"../../redux_store/reducers/cart/actions\";export var AutoComplete=function AutoComplete(_ref){var products=_ref.products,filterProducts=_ref.filterProducts,getProduct=_ref.getProduct,searchProducts=_ref.searchProducts,fetchProducts=_ref.fetchProducts;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];useEffect(function(){console.log('first');fetchProducts();},[]);var onChange=function onChange(e){var value=e.target.value;setSearch(value);searchProducts(products,search);};return React.createElement(\"div\",{className:\"auto-complete\"},React.createElement(\"input\",{onChange:onChange,type:\"text\",placeholder:\"Search...\"}),React.createElement(\"i\",{className:\"fas fa-search\",style:{position:\"absolute\",top:\"25%\",right:\"5%\"}}),search&&filterProducts.length!==0?React.createElement(\"ul\",{className:\"dropdown\"},filterProducts.map(function(product,index){return React.createElement(\"li\",{key:index},product.title);})):\"\");};var mapStateToProps=function mapStateToProps(state){return{products:state.cart.products,filterProducts:state.cart.filterProducts};};var mapDispatchToProps={getProduct:getProduct,fetchProducts:fetchProducts,searchProducts:searchProducts};export default connect(mapStateToProps,mapDispatchToProps)(AutoComplete);","map":{"version":3,"sources":["C:/Users/User/Github_Projects/Online-Shope-BaliProduct/src/components/AutoComplete/index.js"],"names":["React","useState","useEffect","axios","connect","getProduct","fetchProducts","searchProducts","AutoComplete","products","filterProducts","search","setSearch","console","log","onChange","e","value","target","position","top","right","length","map","product","index","title","mapStateToProps","state","cart","mapDispatchToProps"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,CAAqBC,aAArB,CAAoCC,cAApC,KAA0D,yCAA1D,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA6E,IAA1EC,CAAAA,QAA0E,MAA1EA,QAA0E,CAAhEC,cAAgE,MAAhEA,cAAgE,CAAhDL,UAAgD,MAAhDA,UAAgD,CAApCE,cAAoC,MAApCA,cAAoC,CAApBD,aAAoB,MAApBA,aAAoB,eAC3EL,QAAQ,CAAC,EAAD,CADmE,wCAChGU,MADgG,eACxFC,SADwF,eAGvGV,SAAS,CAAC,UAAM,CACdW,OAAO,CAACC,GAAR,CAAY,OAAZ,EACAR,aAAa,GAEd,CAJQ,CAIN,EAJM,CAAT,CAWA,GAAMS,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtB,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB,CACAL,SAAS,CAACK,KAAD,CAAT,CACAV,cAAc,CAACE,QAAD,CAAWE,MAAX,CAAd,CACD,CAJD,CAKA,MACE,4BAAK,SAAS,CAAC,eAAf,EACE,6BAAO,QAAQ,CAAEI,QAAjB,CAA2B,IAAI,CAAC,MAAhC,CAAuC,WAAW,CAAC,WAAnD,EADF,CACmE,yBAAG,SAAS,CAAC,eAAb,CAA6B,KAAK,CAAE,CAAEI,QAAQ,CAAE,UAAZ,CAAwBC,GAAG,CAAE,KAA7B,CAAoCC,KAAK,CAAE,IAA3C,CAApC,EADnE,CAGGV,MAAM,EAAID,cAAc,CAACY,MAAf,GAA0B,CAApC,CAAyC,0BAAI,SAAS,CAAC,UAAd,EACvCZ,cAAc,CAACa,GAAf,CAAmB,SAACC,OAAD,CAAUC,KAAV,QAAoB,2BAAI,GAAG,CAAEA,KAAT,EAAiBD,OAAO,CAACE,KAAzB,CAApB,EAAnB,CADuC,CAAzC,CAGG,EANN,CADF,CAUD,CA7BM,CAgCP,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCnB,QAAQ,CAAEmB,KAAK,CAACC,IAAN,CAAWpB,QADa,CAElCC,cAAc,CAAEkB,KAAK,CAACC,IAAN,CAAWnB,cAFO,CAAZ,EAAxB,CAQA,GAAMoB,CAAAA,kBAAkB,CAAG,CACzBzB,UAAU,CAAVA,UADyB,CAEzBC,aAAa,CAAbA,aAFyB,CAGzBC,cAAc,CAAdA,cAHyB,CAA3B,CASA,cAAeH,CAAAA,OAAO,CAACuB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CtB,YAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { getProduct, fetchProducts, searchProducts } from \"../../redux_store/reducers/cart/actions\";\r\n\r\nexport const AutoComplete = ({ products, filterProducts, getProduct, searchProducts, fetchProducts }) => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('first');\r\n    fetchProducts();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value\r\n    setSearch(value)\r\n    searchProducts(products, search)\r\n  }\r\n  return (\r\n    <div className='auto-complete'>\r\n      <input onChange={onChange} type='text' placeholder='Search...' /><i className=\"fas fa-search\" style={{ position: \"absolute\", top: \"25%\", right: \"5%\" }}></i>\r\n\r\n      {search && filterProducts.length !== 0 ? (<ul className=\"dropdown\">\r\n        {filterProducts.map((product, index) => <li key={index}>{product.title}</li>)}\r\n      </ul>)\r\n        : \"\"}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.cart.products,\r\n  filterProducts: state.cart.filterProducts\r\n})\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  getProduct,\r\n  fetchProducts,\r\n  searchProducts,\r\n\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoComplete);"]},"metadata":{},"sourceType":"module"}