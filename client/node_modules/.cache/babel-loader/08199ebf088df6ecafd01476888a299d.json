{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Github_Projects\\\\Online-Shope-BaliProduct\\\\src\\\\components\\\\AutoComplete\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { getProduct } from \"../../redux_store/reducers/cart/actions\";\nexport const AutoComplete = ({\n  getProduct\n}) => {\n  const [search, setSearch] = useState('');\n  const [products, setProducts] = useState([]);\n  const [filterProducts, setFilterProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('https://bali-product-server.herokuapp.com/api/products');\n      setProducts(result.data);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setFilterProducts(products.filter(product => {\n      const productTitle = product.title.toLowerCase();\n      return productTitle.includes(search.toLowerCase());\n    }));\n  }, [search]);\n\n  const onChange = e => {\n    const value = e.target.value;\n    setSearch(value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"auto-complete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: onChange,\n    type: \"text\",\n    placeholder: \"Search...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fas fa-search\",\n    style: {\n      position: \"absolute\",\n      top: \"25%\",\n      right: \"5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), search && filterProducts.length !== 0 ? React.createElement(\"ul\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, filterProducts.map((product, index) => React.createElement(\"li\", {\n    key: index,\n    onClick: () => getProduct(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, product.title))) : \"\");\n};\nconst mapDispatchToProps = {\n  getProduct\n};\nexport default connect(null, mapDispatchToProps)(AutoComplete);","map":{"version":3,"sources":["C:/Users/User/Github_Projects/Online-Shope-BaliProduct/src/components/AutoComplete/index.js"],"names":["React","useState","useEffect","axios","connect","getProduct","AutoComplete","search","setSearch","products","setProducts","filterProducts","setFilterProducts","loading","setLoading","fetchData","result","data","filter","product","productTitle","title","toLowerCase","includes","onChange","e","value","target","position","top","right","length","map","index","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,yCAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAoB;AAE9C,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMb,KAAK,CACxB,wDADwB,CAA1B;AAGAO,MAAAA,WAAW,CAACM,MAAM,CAACC,IAAR,CAAX;AACD,KALD;;AAOAF,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAYAb,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,iBAAiB,CAACH,QAAQ,CAACS,MAAT,CAAgBC,OAAO,IAAI;AAC3C,YAAMC,YAAY,GAAGD,OAAO,CAACE,KAAR,CAAcC,WAAd,EAArB;AACA,aAAOF,YAAY,CAACG,QAAb,CAAsBhB,MAAM,CAACe,WAAP,EAAtB,CAAP;AACD,KAHiB,CAAD,CAAjB;AAKD,GANQ,EAMN,CAACf,MAAD,CANM,CAAT;;AAUA,QAAMiB,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACAlB,IAAAA,SAAS,CAACkB,KAAD,CAAT;AACD,GAHD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAEF,QAAjB;AAA2B,IAAA,IAAI,EAAC,MAAhC;AAAuC,IAAA,WAAW,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EACmE;AAAG,IAAA,SAAS,EAAC,eAAb;AAA6B,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,EAAE,KAA7B;AAAoCC,MAAAA,KAAK,EAAE;AAA3C,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnE,EAGGvB,MAAM,IAAII,cAAc,CAACoB,MAAf,KAA0B,CAApC,GAAyC;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACvCpB,cAAc,CAACqB,GAAf,CAAmB,CAACb,OAAD,EAAUc,KAAV,KAAoB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAgB,IAAA,OAAO,EAAE,MAAM5B,UAAU,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8Cc,OAAO,CAACE,KAAtD,CAAvC,CADuC,CAAzC,GAGG,EANN,CADF;AAUD,CA3CM;AAiDP,MAAMa,kBAAkB,GAAG;AACzB7B,EAAAA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAO8B,kBAAP,CAAP,CAAkC5B,YAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { getProduct } from \"../../redux_store/reducers/cart/actions\";\r\n\r\nexport const AutoComplete = ({ getProduct }) => {\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [filterProducts, setFilterProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        'https://bali-product-server.herokuapp.com/api/products',\r\n      );\r\n      setProducts(result.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    setFilterProducts(products.filter(product => {\r\n      const productTitle = product.title.toLowerCase();\r\n      return productTitle.includes(search.toLowerCase())\r\n    }\r\n    ))\r\n  }, [search]);\r\n\r\n\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value\r\n    setSearch(value)\r\n  }\r\n  return (\r\n    <div className='auto-complete'>\r\n      <input onChange={onChange} type='text' placeholder='Search...' /><i className=\"fas fa-search\" style={{ position: \"absolute\", top: \"25%\", right: \"5%\" }}></i>\r\n\r\n      {search && filterProducts.length !== 0 ? (<ul className=\"dropdown\">\r\n        {filterProducts.map((product, index) => <li key={index} onClick={() => getProduct()}>{product.title}</li>)}\r\n      </ul>)\r\n        : \"\"}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  getProduct,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AutoComplete);"]},"metadata":{},"sourceType":"module"}