{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Github_Projects\\\\Online-Shope-BaliProduct\\\\src\\\\components\\\\AutoComplete\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { getProduct, fetchProducts, searchProducts } from \"../../redux_store/reducers/cart/actions\";\nexport const AutoComplete = ({\n  products,\n  getProduct,\n  searchProducts\n}) => {\n  const [search, setSearch] = useState('');\n  const [filterProducts, setFilterProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  useEffect(() => {\n    searchProducts(products, search);\n  }, [search]);\n  return React.createElement(\"div\", {\n    className: \"auto-complete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: onChange,\n    type: \"text\",\n    placeholder: \"Search...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fas fa-search\",\n    style: {\n      position: \"absolute\",\n      top: \"25%\",\n      right: \"5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), search && filterProducts.length !== 0 ? React.createElement(\"ul\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, filterProducts.map((product, index) => React.createElement(\"li\", {\n    key: index,\n    onClick: () => getProduct(product),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, product.title))) : \"\");\n};\n\nconst mapStateToProps = state => ({\n  products: state.cart.products\n});\n\nconst mapDispatchToProps = {\n  getProduct,\n  searchProducts\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoComplete);","map":{"version":3,"sources":["C:/Users/User/Github_Projects/Online-Shope-BaliProduct/src/components/AutoComplete/index.js"],"names":["React","useState","useEffect","axios","connect","getProduct","fetchProducts","searchProducts","AutoComplete","products","search","setSearch","filterProducts","setFilterProducts","loading","setLoading","onChange","position","top","right","length","map","product","index","title","mapStateToProps","state","cart","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,cAApC,QAA0D,yCAA1D;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYJ,EAAAA,UAAZ;AAAwBE,EAAAA;AAAxB,CAAD,KAA8C;AAExE,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACE,QAAD,EAAWC,MAAX,CAAd;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAEM,QAAjB;AAA2B,IAAA,IAAI,EAAC,MAAhC;AAAuC,IAAA,WAAW,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EACmE;AAAG,IAAA,SAAS,EAAC,eAAb;AAA6B,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,EAAE,KAA7B;AAAoCC,MAAAA,KAAK,EAAE;AAA3C,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnE,EAGGT,MAAM,IAAIE,cAAc,CAACQ,MAAf,KAA0B,CAApC,GAAyC;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACvCR,cAAc,CAACS,GAAf,CAAmB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAgB,IAAA,OAAO,EAAE,MAAMlB,UAAU,CAACiB,OAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDA,OAAO,CAACE,KAA7D,CAAvC,CADuC,CAAzC,GAGG,EANN,CADF;AAUD,CA5BM;;AA+BP,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,QAAQ,EAAEiB,KAAK,CAACC,IAAN,CAAWlB;AADa,CAAZ,CAAxB;;AAOA,MAAMmB,kBAAkB,GAAG;AACzBvB,EAAAA,UADyB;AAEzBE,EAAAA;AAFyB,CAA3B;AAQA,eAAeH,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,YAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { getProduct, fetchProducts, searchProducts } from \"../../redux_store/reducers/cart/actions\";\r\n\r\nexport const AutoComplete = ({ products, getProduct, searchProducts }) => {\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [filterProducts, setFilterProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    searchProducts(products, search)\r\n  }, [search]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='auto-complete'>\r\n      <input onChange={onChange} type='text' placeholder='Search...' /><i className=\"fas fa-search\" style={{ position: \"absolute\", top: \"25%\", right: \"5%\" }}></i>\r\n\r\n      {search && filterProducts.length !== 0 ? (<ul className=\"dropdown\">\r\n        {filterProducts.map((product, index) => <li key={index} onClick={() => getProduct(product)}>{product.title}</li>)}\r\n      </ul>)\r\n        : \"\"}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.cart.products\r\n})\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  getProduct,\r\n  searchProducts,\r\n\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoComplete);"]},"metadata":{},"sourceType":"module"}