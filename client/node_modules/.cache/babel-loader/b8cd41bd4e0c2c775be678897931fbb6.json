{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Github_Projects\\\\shop\\\\src\\\\components\\\\AutoComplete\\\\index.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nexport const AutoComplete = ({\n  products\n}) => {\n  const [filterProducts, setFilterProducts] = useState(products);\n  const [text, setText] = useState('');\n\n  const onChange = e => {\n    const value = e.target.value;\n    const filterByName = products.filter(product => product.title.includes(value));\n    setText(value);\n    setFilterProducts(filterByName);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: text,\n    onChange: onChange,\n    type: \"text\",\n    placeholder: \"Search...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"auto-complete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, !filterProducts.length === 0 && text ? React.createElement(\"ul\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, filterProducts.map((product, index) => React.createElement(\"li\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, product.title))) : \"\"));\n};\n\nconst mapStateToProps = state => ({\n  products: state.cart.products\n});\n\nexport default connect(mapStateToProps, null)(AutoComplete);","map":{"version":3,"sources":["C:/Users/User/Github_Projects/shop/src/components/AutoComplete/index.js"],"names":["React","useState","connect","AutoComplete","products","filterProducts","setFilterProducts","text","setText","onChange","e","value","target","filterByName","filter","product","title","includes","length","map","index","mapStateToProps","state","cart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAACG,QAAD,CAApD;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,YAAY,GAAGT,QAAQ,CAACU,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBN,KAAvB,CAA3B,CAArB;AACAH,IAAAA,OAAO,CAACG,KAAD,CAAP;AACAL,IAAAA,iBAAiB,CAACO,YAAD,CAAjB;AACD,GALD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,KAAK,EAAEN,IAAd;AAAoB,IAAA,QAAQ,EAAEE,QAA9B;AAAwC,IAAA,IAAI,EAAC,MAA7C;AAAoD,IAAA,WAAW,EAAC,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,cAAc,CAACa,MAAhB,KAA2B,CAA3B,IAAgCX,IAAhC,GAAwC;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACtCF,cAAc,CAACc,GAAf,CAAmB,CAACJ,OAAD,EAAUK,KAAV,KAAoB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBL,OAAO,CAACC,KAAzB,CAAvC,CADsC,CAAxC,GAGG,EAJN,CAHF,CADF;AAYD,CArBM;;AAuBP,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,QAAQ,EAAEkB,KAAK,CAACC,IAAN,CAAWnB;AADa,CAAZ,CAAxB;;AAKA,eAAeF,OAAO,CAACmB,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,YAA/B,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nexport const AutoComplete = ({ products }) => {\r\n  const [filterProducts, setFilterProducts] = useState(products);\r\n  const [text, setText] = useState('')\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    const filterByName = products.filter(product => product.title.includes(value));\r\n    setText(value)\r\n    setFilterProducts(filterByName);\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      <input value={text} onChange={onChange} type='text' placeholder='Search...' />\r\n      <div className='auto-complete'>\r\n        {!filterProducts.length === 0 && text ? (<ul className=\"dropdown\">\r\n          {filterProducts.map((product, index) => <li key={index}>{product.title}</li>)}\r\n        </ul>)\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.cart.products,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, null)(AutoComplete);"]},"metadata":{},"sourceType":"module"}